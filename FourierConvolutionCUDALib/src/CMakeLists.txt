# include directories
# src directory
INCLUDE_DIRECTORIES(.)

IF(APPLE)
SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -stdlib=libc++")
ENDIF(APPLE)

# build and link
FIND_PACKAGE(CUDA QUIET)
CUDA_ADD_LIBRARY(${PROJECT_NAME} convolution3Dfft.cu standardCUDAfunctions.cu SHARED)
CUDA_ADD_LIBRARY(${PROJECT_NAME}_static convolution3Dfft.cu standardCUDAfunctions.cu STATIC)
CUDA_ADD_CUFFT_TO_TARGET(${PROJECT_NAME})
CUDA_ADD_CUFFT_TO_TARGET(${PROJECT_NAME}_static)

IF(WIN32)
IF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
include (GenerateExportHeader)
GENERATE_EXPORT_HEADER( ${PROJECT_NAME}
			BASE_NAME ${PROJECT_NAME}
            EXPORT_MACRO_NAME ${PROJECT_NAME}_EXPORT
            EXPORT_FILE_NAME ${PROJECT_NAME}_Export.h
            STATIC_DEFINE ${PROJECT_NAME}_BUILT_AS_STATIC
)
set_target_properties(${PROJECT_NAME}_static PROPERTIES COMPILE_FLAGS "-D${PROJECT_NAME}_BUILT_AS_STATIC")
INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR}/src)
ENDIF()
ENDIF()

TARGET_LINK_LIBRARIES(${PROJECT_NAME}_static ${CUDA_CUDA_LIBRARY})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${CUDA_CUDA_LIBRARY})

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PUBLIC_HEADER "${PROJECT_SOURCE_DIR}/src/convolution3Dfft.h;${PROJECT_NAME}_Export.h") 
SET_TARGET_PROPERTIES(${PROJECT_NAME}_static PROPERTIES PUBLIC_HEADER "${PROJECT_SOURCE_DIR}/src/convolution3Dfft.h;${PROJECT_NAME}_Export.h") 

INSTALL(TARGETS ${PROJECT_NAME} ${PROJECT_NAME}_static
  EXPORT fourierconvolutioncudalib-targets 
  RUNTIME DESTINATION ${INSTALL_LIB_DIR}
  LIBRARY DESTINATION ${INSTALL_LIB_DIR}
  ARCHIVE DESTINATION ${INSTALL_LIB_DIR}
  PUBLIC_HEADER DESTINATION ${INSTALL_INCLUDE_DIR}
  )


